apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        // This ensures that ProGuard removes un-supported language resources.
        // https://developer.android.com/studio/build/shrink-code#unused-alt-resources
        resConfig rootProject.resConfigs
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions { arguments = ["room.incremental": "true"] }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(":domain")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    // Room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"

    // RxJava
    implementation "io.reactivex.rxjava3:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava3:rxjava:$rootProject.rxJavaVersion"

    // RxJava Bridge
    implementation("com.github.akarnokd:rxjava3-bridge:3.0.0") {
        because "This provides interoperability between RxJava 2 and 3. " +
                "Room only returns RxJava2 observables, however, the primary module uses RxJava3."
    }

    // Timber
    debugImplementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Unit testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:$rootProject.junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$rootProject.junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$rootProject.junitVersion"
    testImplementation "io.mockk:mockk:$rootProject.mockkVersion"
    testImplementation "org.assertj:assertj-core:$rootProject.assertjVersion"

    // Instrumentation testing
    implementation("androidx.appcompat:appcompat:$rootProject.appCompatVersion") {
        because "Required to successfully unit test Room."
    }
    implementation("androidx.arch.core:core-runtime:$rootProject.androidXArchCoreVersion") {
        because "Required to successfully test Room."
    }
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.androidXArchCoreVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.androidXTestRulesVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidXJunitVersion"
    androidTestImplementation "org.assertj:assertj-core:$rootProject.assertjVersion"
}
