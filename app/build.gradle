apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

// enables LayoutContainer
androidExtensions {
    experimental = true
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.precopia.rxtracker"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        // This ensures that ProGuard removes un-supported language resources.
        // https://developer.android.com/studio/build/shrink-code#unused-alt-resources
        resConfig rootProject.resConfigs
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "${applicationId}-v${rootProject.versionName}-(${rootProject.versionCode})")
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':data')

    implementation "androidx.core:core-ktx:$rootProject.rootProject.coreKtxVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"

    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.activity:activity-ktx:$rootProject.activityVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"

    implementation "com.google.android.material:material:$rootProject.materialDesignVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$rootProject.ankoVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"

    // Navigation
    implementation "androidx.navigation:navigation-runtime-ktx:$rootProject.navVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navVersion"

    // RxJava
    implementation "io.reactivex.rxjava3:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava3:rxjava:$rootProject.rxJavaVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    // Timber
    debugImplementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"

    // Unit Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:$rootProject.junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$rootProject.junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$rootProject.junitVersion"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "org.assertj:assertj-core:$rootProject.assertjVersion"
    testImplementation ("androidx.arch.core:core-testing:$rootProject.androidXArchCoreVersion") {
        because "Needed to unit test LiveData"
    }

    // Instrumentation testing
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidXJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.androidXTestRulesVersion"
    androidTestImplementation "org.assertj:assertj-core:$rootProject.assertjVersion"
}
